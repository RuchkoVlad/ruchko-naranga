{"version":3,"sources":["components/context/service-context/service-context.js","components/hoc/with-service/index.js","components/hoc/with-service/with-service.jsx","constants/getAllPeople.constant.js","actions/getAllPeople.actions.js","utils/compose.js","components/facebookLogin/facebookLogin.js","components/person/person-view.jsx","components/person/person-container.jsx","components/person/index.js","components/pageNotFound/pageNotFound.js","App.js","services/swapiApi.js","reducers/getAllPeople.reducer.js","reducers/index.js","store.js","index.js"],"names":["React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","withService","Wrapped","props","service","ALL_PEOPLE_CONSTANTS","getAllPeopleAction","dispatch","type","getAllPeople","then","data","payload","getAllPeopleLoaded","catch","err","compose","funcs","comp","reduceRight","wrapped","f","FacebookLogin","state","auth","name","picture","email","responseFacebook","response","console","log","setState","url","facebookData","this","style","width","avatar","src","title","description","appId","autoLoad","margin","fields","onClick","componentClicked","callback","Component","Person","allPeople","map","person","birthYear","birth_year","gender","hairColor","hair_color","height","mass","size","key","background","extra","icon","UserOutlined","marginRight","align","column","Item","label","defaultProps","PersonContainer","loading","error","hasData","errorMessage","spinner","content","connect","bindActionCreators","PageNotFound","status","subTitle","App","padding","path","component","exact","SwapiService","fetch","answer","ok","Error","json","getResource","res","results","action","undefined","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","Service","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.133cf074.chunk.js","sourcesContent":["import React from 'react';\n\nconst {\n    Provider: ServiceProvider,\n    Consumer: ServiceConsumer,\n} = React.createContext();\n\nexport {\n    ServiceProvider,\n    ServiceConsumer,\n};\n","import withService from './with-service';\n\nexport default withService;\n","import React from 'react';\nimport { ServiceConsumer } from '../../context/service-context';\n\nconst withService = () => Wrapped => props => (\n    <ServiceConsumer>\n        {\n            service => (\n                <Wrapped\n                    {...props}\n                    service={service}\n                />\n            )\n        }\n    </ServiceConsumer>\n);\n\nexport default withService;\n","/* eslint-disable */\n\nexport const ALL_PEOPLE_CONSTANTS = {\n    GET_ALL_PEOPLE_REQUEST: 'GET_ALL_PEOPLE_REQUEST',\n    GET_ALL_PEOPLE_SUCCESS: 'GET_ALL_PEOPLE_SUCCESS',\n    GET_ALL_PEOPLE_FAILURE: 'GET_ALL_PEOPLE_FAILURE',\n};\n","import { ALL_PEOPLE_CONSTANTS } from '../constants';\n\nconst getAllPeopleRequested = () => ({\n    type: ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_REQUEST,\n});\n\nconst getAllPeopleLoaded = data => ({\n    type: ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_SUCCESS,\n    payload: data,\n});\n\nconst getAllPeopleError = error => ({\n    type: ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_FAILURE,\n    payload: error,\n});\n\nconst getAllPeopleAction = service => () => dispatch => {\n    dispatch(getAllPeopleRequested());\n    service\n        .getAllPeople()\n        .then(data => {\n            dispatch(getAllPeopleLoaded(data));\n        })\n        .catch(err => {\n            dispatch(getAllPeopleError(err));\n        });\n};\n\n\nexport default getAllPeopleAction;\n","const compose = (...funcs) => comp => funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n\nexport default compose;\n","import React, { Component } from \"react\";\nimport FacebookLoginBtn from \"react-facebook-login\";\nimport {Card} from \"antd\";\nimport {Meta} from \"antd/es/list/Item\";\nimport {Avatar} from \"antd\";\n\nexport default class FacebookLogin extends Component{\n    state = {\n        auth: false,\n        name: '',\n        picture: '',\n        email: ''\n    }\n\n    responseFacebook = (response) => {\n        console.log(response);\n        this.setState({\n            auth: true,\n            name: response.name,\n            picture: response.picture.data.url,\n            email: response.email\n        })\n    }\n\n    render() {\n        let facebookData;\n\n        this.state.auth ?\n            facebookData = (\n\n                <Card style={{ width: 300 }}>\n                    <Meta\n                        avatar={<Avatar src={this.state.picture} />}\n                        title={this.state.name}\n                        description={this.state.email}\n                    />\n                </Card>\n            ) :\n            facebookData = (\n                <FacebookLoginBtn\n                    appId=\"340445820284612\"\n                    autoLoad={true}\n                    style={{margin: '30px'}}\n                    fields=\"name,email,picture\"\n                    onClick={this.componentClicked}\n                    callback={this.responseFacebook} />\n            )\n\n        return (\n            <div>\n                {facebookData}\n            </div>\n        );\n    }\n}","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport FacebookLogin from \"../facebookLogin/facebookLogin\";\nimport {Card, Space} from \"antd\";\nimport {Avatar} from \"antd\";\nimport {UserOutlined} from '@ant-design/icons';\nimport {Descriptions} from \"antd\";\n\nconst Person = ({allPeople}) => (\n    <Fragment>\n        <FacebookLogin/>\n        {allPeople.map(person => {\n            const {\n                name,\n                birth_year: birthYear,\n                gender,\n                hair_color: hairColor,\n                height,\n                mass,\n            } = person;\n\n            return (\n                <Space size=\"large\" key={name} style={{background: 'gray'}}>\n                    <Card title={name}\n                          extra={<Avatar size={45} icon={<UserOutlined/>}/>}\n                          style={{width: 300, marginRight: '20px',}}\n                          align=\"center\"\n                          key={name}>\n                        <Descriptions column={1}>\n                            <Descriptions.Item label=\"Name\">{name}</Descriptions.Item>\n                            <Descriptions.Item label=\"Birthday\">{birthYear}</Descriptions.Item>\n                            <Descriptions.Item label=\"Sex\">{gender}</Descriptions.Item>\n                            <Descriptions.Item label=\"Hair color\">{hairColor}</Descriptions.Item>\n                            <Descriptions.Item label=\"Height\">{height}</Descriptions.Item>\n                            <Descriptions.Item label=\"Weight\">{mass}</Descriptions.Item>\n                        </Descriptions>\n                    </Card>\n                </Space>\n            );\n        })}\n    </Fragment>\n);\n\nPerson.defaultProps = {\n    allPeople: [],\n};\n\nPerson.propTypes = {\n    allPeople: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Person;\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport withService from '../hoc/with-service';\nimport getAllPeopleAction from '../../actions/getAllPeople.actions';\nimport {compose} from '../../utils';\nimport Person from './person-view';\nimport {Spin} from \"antd\";\n\nclass PersonContainer extends Component {\n\n    static propTypes = {\n        getAllPeople: PropTypes.func,\n        allPeople: PropTypes.arrayOf(PropTypes.object),\n        loading: PropTypes.bool,\n        error: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        getAllPeople: () => {\n        },\n        allPeople: [],\n        loading: false,\n        error: false,\n    };\n\n    componentDidMount() {\n        const {getAllPeople} = this.props;\n        getAllPeople();\n    }\n\n    render() {\n        const {allPeople, loading, error} = this.props;\n\n        const hasData = !(loading || error);\n\n        const errorMessage = error ? <p>Error  </p> : null;\n        const spinner = loading ? <p>Loading... <Spin size=\"large\"/></p> : null;\n        const content = hasData ? (\n            <Person\n                allPeople={allPeople}\n            />\n        ) : null;\n\n        return (\n            <Fragment>\n                {errorMessage}\n                {spinner}\n                {content}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const {\n        getAllPeople: {data: allPeople, loading, error},\n    } = state;\n\n    return {\n        allPeople,\n        loading,\n        error,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, {service}) => bindActionCreators(\n    {\n        getAllPeople: getAllPeopleAction(service),\n    },\n    dispatch,\n);\n\nexport default compose(\n    withService(),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    ),\n)(PersonContainer);\n","import PersonContainer from './person-container';\n\nexport default PersonContainer;\n","import React from \"react\";\nimport {Result} from \"antd\";\n\nconst PageNotFound = ()=> {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n        />\n    )\n}\n\nexport default PageNotFound;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport PersonContainer from './components/person';\nimport PageNotFound from \"./components/pageNotFound/pageNotFound\";\n\nconst App = () => (\n    <div style={{background: 'gray', padding: '50px'}}>\n        <Router>\n            <Switch>\n                <Route path=\"/ruchko-naranga\" component={PersonContainer} exact/>\n                <Route component={PageNotFound}/>\n            </Switch>\n        </Router>\n    </div>\n);\n\nexport default App;\n","/* eslint-disable no-return-await */\n/* eslint-disable class-methods-use-this */\n\nexport default class SwapiService {\n    async getResource(url) {\n        const answer = await fetch(url);\n\n        if (!answer.ok) {\n            throw new Error(`Could not fetch! + ${url}`);\n        }\n        return await answer.json();\n    }\n\n    async getAllPeople() {\n        const res = await this.getResource('https://swapi.dev/api/people');\n        return res.results;\n    }\n}\n","import { ALL_PEOPLE_CONSTANTS } from '../constants';\n\nconst getAllPeople = (state, action) => {\n    if (state === undefined) {\n        return {\n            data: [],\n            loading: true,\n            error: false,\n        };\n    }\n\n    switch (action.type) {\n    case ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_REQUEST:\n        return {\n            data: [],\n            loading: true,\n            error: false,\n        };\n\n    case ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_SUCCESS:\n        return {\n            data: action.payload,\n            loading: false,\n            error: false,\n        };\n\n    case ALL_PEOPLE_CONSTANTS.GET_ALL_PEOPLE_FAILURE:\n        return {\n            data: [],\n            loading: false,\n            error: true,\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default getAllPeople;\n","import { combineReducers } from 'redux';\nimport getAllPeople from './getAllPeople.reducer';\n\nconst rootReducer = combineReducers({\n    getAllPeople,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware,\n    ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport Service from './services/swapiApi';\nimport { ServiceProvider } from './components/context/service-context';\nimport store from './store';\nimport 'antd/dist/antd.css';\nconst service = new Service();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ServiceProvider value={service}>\n            <App />\n        </ServiceProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}